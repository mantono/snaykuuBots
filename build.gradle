apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'idea'

group = 'aderaist'
version = '1.0-SNAPSHOT'
description = 'Snaykuu Bots'

defaultTasks 'copy'

buildscript {
    ext.kotlin_version = '1.1.3-2'
    ext.jvm_version = '1.8'
    ext.junit_platform_version = '1.0.0-M4'
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junit_platform_version"
    }
}

apply plugin: "org.junit.platform.gradle.plugin"

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jre8', version: kotlin_version
    compile 'xanindorf:aaah-snaykuu:1.0'
    compile 'xanindorf:aaah-snaykuu:1.0:javadoc'
    compile 'xanindorf:aaah-snaykuu:1.0:sources'
    compile 'org.slf4j:slf4j-simple:1.7.21'
    compile 'io.github.microutils:kotlin-logging:1.4.5'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0-M4'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.0-M4'
}

junitPlatform {
    platformVersion = junit_platform_version
}

repositories {
    mavenLocal()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "http://jcenter.bintray.com" }
    maven { url 'https://jitpack.io' }
}

compileKotlin {
    sourceCompatibility = jvm_version
    kotlinOptions {
        jvmTarget = jvm_version
    }
}

compileJava {
    sourceCompatibility = jvm_version
    targetCompatibility = jvm_version
    options.incremental = true
    options.encoding = 'UTF-8'
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

// Important: All classes containing test cases must match the
// the regex pattern "^.*Tests?$" to be picked up by the junit-gradle plugin.
sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    test.kotlin.srcDirs += 'src/test/kotlin'
    main.java.srcDirs += 'src/main/java'
    test.java.srcDirs += 'src/test/java'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task copy(type: Copy, dependsOn: build) {
    from buildDir.canonicalPath + '/classes/main/bot'
    def snaykuuPath = System.getenv('SNAYKUU_PATH') + '/bot'
    into snaykuuPath
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts for faster execution'
    gradleVersion = '4.0'
}
